version: '3.8'

services:
  # PostgreSQL Legacy Database
  postgres-legacy:
    image: postgres:15
    container_name: sharenote-postgres-legacy
    environment:
      POSTGRES_DB: sharenote_legacy
      POSTGRES_USER: sharenote_user
      POSTGRES_PASSWORD: sharenote_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_legacy_data:/var/lib/postgresql/data
      - ./sql/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sql/02-indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sharenote_user -d sharenote_legacy"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sharenote-network

  # PostgreSQL Shard1 Database
  postgres-shard1:
    image: postgres:15
    container_name: sharenote-postgres-shard1
    environment:
      POSTGRES_DB: sharenote_shard1
      POSTGRES_USER: sharenote_user
      POSTGRES_PASSWORD: sharenote_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_shard1_data:/var/lib/postgresql/data
      - ./sql/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sql/02-indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sharenote_user -d sharenote_shard1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sharenote-network

  # PostgreSQL Shard2 Database
  postgres-shard2:
    image: postgres:15
    container_name: sharenote-postgres-shard2
    environment:
      POSTGRES_DB: sharenote_shard2
      POSTGRES_USER: sharenote_user
      POSTGRES_PASSWORD: sharenote_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_shard2_data:/var/lib/postgresql/data
      - ./sql/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sql/02-indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sharenote_user -d sharenote_shard2"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sharenote-network

  # Redis Master
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    hostname: redis-master
    command: redis-server --port 6379 --requirepass redis_password --masterauth redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_master_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      sharenote-network:
        aliases:
          - redis-master

  # Redis Sentinel 1
  redis-sentinel-1:
    image: redis:7-alpine
    container_name: sharenote-redis-sentinel-1
    command: redis-sentinel /etc/redis/sentinel.conf
    ports:
      - "26379:26379"
    volumes:
      - ./redis/sentinel.conf:/etc/redis/sentinel.conf
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sharenote-network

  # Redis Sentinel 2
  redis-sentinel-2:
    image: redis:7-alpine
    container_name: sharenote-redis-sentinel-2
    command: redis-sentinel /etc/redis/sentinel.conf
    ports:
      - "26380:26379"
    volumes:
      - ./redis/sentinel.conf:/etc/redis/sentinel.conf
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sharenote-network

  # Redis Sentinel 3
  redis-sentinel-3:
    image: redis:7-alpine
    container_name: sharenote-redis-sentinel-3
    command: redis-sentinel /etc/redis/sentinel.conf
    ports:
      - "26381:26379"
    volumes:
      - ./redis/sentinel.conf:/etc/redis/sentinel.conf
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sharenote-network

volumes:
  postgres_legacy_data:
  postgres_shard1_data:
  postgres_shard2_data:
  redis_master_data:

networks:
  sharenote-network:
    driver: bridge